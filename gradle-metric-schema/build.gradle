apply plugin: 'com.gradle.plugin-publish'
// java-gradle-plugin MUST be applied before publish-jar.gradle
apply plugin: 'java-gradle-plugin'
apply plugin: 'groovy'
apply from: "$rootDir/gradle/publish-jar.gradle"

dependencies {
    implementation project(':metric-schema-java')
    implementation project(':metric-schema-datadog')
    implementation project(':metric-schema-grafana')
    implementation project(':metric-schema-markdown')
    implementation project(':metric-schema-api:metric-schema-api-objects')
    implementation 'com.google.guava:guava'
    implementation 'com.palantir.conjure.java.runtime:conjure-java-jackson-serialization'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    testImplementation gradleTestKit()
    testCompile 'com.netflix.nebula:nebula-test'

    compileOnly 'org.immutables:value::annotations'
}


pluginBundle {
    website = 'https://github.com/palantir/metric-schema'
    vcsUrl = 'https://github.com/palantir/metric-schema'
    description = 'Schema for standard metric definitions with generators for documentation and type-safe instrumentation utilities.'
    tags = ['instrumentation', 'metrics', 'observability']

    plugins {
        metricSchemaPlugin {
            id = 'com.palantir.metric-schema'
            displayName = 'Metric Schema Plugin'
        }
        metricSchemaMarkdownPlugin {
            id = 'com.palantir.metric-schema-markdown'
            displayName = "Metric Schema Markdown Plugin"
        }
        metricSchemaDashboardPlugin {
            id = 'com.palantir.metric-schema-dashboard'
            displayName = "Metric Schema Dashboard Plugin"
        }
    }
}

idea {
    module {
        testSourceDirs += file("src/test/groovy")
    }
}

publishPlugins.onlyIf {
    project.version ==~ /[0-9]+(\.[0-9]+)+(-rc[0-9]+)?(-alpha[0-9]+)?/
}

// Configure the publishPlugins task
tasks.publish.dependsOn publishPlugins
project.ext.'gradle.publish.key' = System.env["GRADLE_KEY"]
project.ext.'gradle.publish.secret' = System.env["GRADLE_SECRET"]
